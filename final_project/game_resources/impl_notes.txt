gameplay elements: 
    1. worth fiddling arround with self.attack_cooldown and self.parry_cooldown (and self.action_cooldown) in fighter.py; 
    a totally random AI can spam attacks very quickly making it nontrivial to defeat it!
    2. maybe change the parry rect width to make parrying a little less difficult? right now it's set at 2 * self.rect.width which is pretty okay
    3. maybe increase attack, parry, action cooldown if gameplay agent is AI?

hyperparameters as constants locations: 
    - 'NUM_HIDDEN_NODES' in 'dqn.py'
    - round win reward penalty/addendum in 'game.py''s step() function

to-do's: 
    1. ✅ in fighter.py: 
        1.1. ✅ write get_state function 
        1.2. ✅ write parse_keys_from_action_idx function

    from 02/23/23: 
    1. ✅ solve environment (need pygame and pytorch)
    2. ✅ check to make sure demo.py works as intended
        2.1. in playtest, up action cooldown for AI agents if too fast.
    3. write stable_softmax function in trainer.py 
    4. fin. trainer.py's train function! 
        4.1. write train_step function in trainer.py


    long-term: 
    0. train model! 
    1. after model has been trained: 
        1.1. re-visit demo & make sure loading loaded-params AI_TRAINER agent works!
        1.2. run AI_TRAINER vs AI_RAND test!